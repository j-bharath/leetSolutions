class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        if(nums1.size() > nums2.size()) nums1.swap(nums2);
        int size = nums1.size()+nums2.size(), mid = (size-1)/2;
        int l = 0, r = nums1.size()-1;
        while(l <= r) {
            int m1 = l+((r-l)>>1), m2 = mid-m1;
            if(nums1[m1] < nums2[m2]) l = m1+1;
            else r = m1-1;
        }
        int a = max(l>0? nums1[r]:INT_MIN, mid-l<nums2.size()? nums2[mid-l]:INT_MIN);
        if(size&1) return a;
        int b = min(l<nums1.size()? nums1[l]:INT_MAX, mid-l+1<nums2.size()? nums2[mid-r]:INT_MAX);
        return (a+b)/2.0;
    }
};