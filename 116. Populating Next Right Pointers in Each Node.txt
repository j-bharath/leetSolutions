/**
 * Definition for binary tree with next pointer.
 * struct TreeLinkNode {
 *  int val;
 *  TreeLinkNode *left, *right, *next;
 *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
 * };
 */
class Solution {
public:
    void connect(TreeLinkNode *root) {
        queue<TreeLinkNode*> nodes;
        if(root)
            nodes.push(root);
        while(!nodes.empty()){
            int count=nodes.size();
            while(count--){
                TreeLinkNode *temp=nodes.front();
                nodes.pop();
                if(count!=0){
                    temp->next=nodes.front();
                }
                else{
                    cout<<"in null"<<endl;
                    temp->next=NULL;
                }
                if(temp->left)
                    nodes.push(temp->left);
                if(temp->right)
                    nodes.push(temp->right);
            }
        }
    }
};