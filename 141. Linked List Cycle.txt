/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(!head)
            return head;
        if(head->next==NULL)
            return false;
        ListNode *slow,*fast;
        slow=head;fast=head;
        while(slow && fast){
            if(fast->next){
                fast=fast->next;
            }
            else
                return false;
            if(fast->val==slow->val)
                return true;
            if(fast->next)
                fast=fast->next;
            else
                return false;
            if(fast->val==slow->val)
                return true;
            slow=slow->next;
        }
        return false;
    }
};