class Solution {
    
    
public:

    bool row[9][9];
    bool col[9][9];
    bool square[9][9];
    
    
    
    bool isValidSudoku(vector<vector<char>>& board) {
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                row[i][j]=false;
                col[i][j]=false;
                square[i][j]=false;
            }
        }
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[i].size();j++){
                if(board[i][j]!='.'){
                    if(row[i][board[i][j]-'1'] || col[j][board[i][j]-'1'] || square[3*(i/3)+(j/3)][board[i][j]-'1'])
                        return false;
                    else{
                        row[i][board[i][j]-'1']=true;
                        col[j][board[i][j]-'1']=true;
                        square[3*(i/3)+(j/3)][board[i][j]-'1']=true;
                    }
                }
            }
        }
        return true;
    }
};