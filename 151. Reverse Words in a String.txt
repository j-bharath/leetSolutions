class Solution {
public:
    
    void reverse(string &s,int start,int end){
		while(start<=end){
			char temp=s[start];
			s[start]=s[end];
			s[end]=temp;
			start++;end--;
		}
    }
    
    
    void reverseWords(string &s) {
        if(s.length()==0)
            return ;
        int startPos,endPos;
        startPos=0;
        while(s[startPos]==' '){
            s.erase(s.begin());
        }
        endPos=s.length()-1;
        reverse(s,startPos,endPos);
        //cout<<s<<endl;
        startPos=0;
        //cout<<"before loop"<<endl;
        while(s[startPos]==' '){
            s.erase(s.begin());
        }
        endPos=startPos;
        while(endPos<s.length()){
        	while(s[endPos]!=' ' && endPos!=s.length()-1){
        		endPos++;
        		//cout<<endPos<<" "<<s.length()-1<<endl;
        	}
        	
        	if(endPos==s.length()-1){
        		reverse(s,startPos,endPos);
        		break;
        	}
        	else{
        		reverse(s,startPos,endPos-1);
        	}
        	endPos++;
        	while(s[endPos]==' '){
        	    s.erase(s.begin()+endPos);
        	}
        	startPos=endPos;
        }
        cout<<s<<endl;
    }
};