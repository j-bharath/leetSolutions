/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode *newList,*head;
        if(!l1)
            return l2;
        if(!l2)
            return l1;
        
        if(l1->val <= l2->val){
            newList=l1;
            head=newList;
            l1=l1->next;
        }else{
            newList=l2;
            head=newList;
            l2=l2->next;
        }
        
        while(l1 || l2){
            if(l1 && l2){
                if(l1->val <= l2->val){
                    newList->next=l1;
                    newList=newList->next;
                    l1=l1->next;
                }else{
                    newList->next=l2;
                    newList=newList->next;
                    l2=l2->next;
                }
            }else if(l1){
                newList->next=l1;
                newList=newList->next;
                l1=l1->next;
            }else if(l2){
                newList->next=l2;
                newList=newList->next;
                l2=l2->next;
            }
        }
        return head;
    }
};